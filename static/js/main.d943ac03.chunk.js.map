{"version":3,"sources":["components/Wrapper/index.js","components/Header/index.js","components/Jumbotron/index.js","components/WrapperImages/index.js","components/FriendCard/index.js","App.js","index.js"],"names":["Wrapper","props","react_default","a","createElement","children","Header","className","status","score","topScore","Jumbotron","WrapperImages","id","FriendCard","alt","name","src","process","image","onClick","selectedFriend","App","state","friendList","selected","_this","setState","concat","shuffle","find","element","document","getElementById","classList","remove","offsetWidth","add","console","log","sourceArray","i","length","j","Math","floor","random","temp","this","_this2","components_Wrapper","components_Header","components_Jumbotron","components_WrapperImages","map","friend","components_FriendCard","key","Component","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.d943ac03.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div>{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport './style.css';\n\nfunction Header(props) {\n  return (\n    <div className=\"sticky-top shadow\">\n      <div className=\"container-fluid bg-info\">\n        <div className=\"row height100\">\n          <div className=\"col-3 text-center align-middle my-auto\">\n            <div className=\"navHeader\"><strong>Clicky Game</strong></div>\n          </div>\n          <div className=\"col-6 text-center align-middle my-auto\">\n            <div className=\"status\">{props.status}</div>\n          </div>\n          <div className=\"col-3 text-right my-auto pr-5\">\n            <div className=\"scoreTopScore\"><strong>Score: <span>{props.score}</span>  | <span>Top Score: <span>{props.topScore}</span></span></strong></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport './style.css';\n\nfunction Jumbotron() {\n    return (\n        <div className=\"container-fluid mt-4\">\n            <div className=\"jumbotron text-center\">\n                <div className=\"jumbotronHeader\"><strong>Clicky Game!</strong></div>\n                <p><strong>Click on an image to earn points, but don't click on any more than once!</strong></p>\n            </div>\n        </div>\n    );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction WrapperImages(props) {\n  return <div id=\"shakerBox\" className=\"wrapper center\">{props.children}</div>;\n}\n\nexport default WrapperImages;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img className=\"pointer\" alt={props.name} src={process.env.PUBLIC_URL +props.image} onClick={() => props.selectedFriend(props.id)}/>\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React, { Component } from \"react\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport Jumbotron from \"./components/Jumbotron\";\nimport WrapperImages from \"./components/WrapperImages\";\nimport FriendCard from \"./components/FriendCard\";\nimport friendList from \"./friends.json\";\n\nclass App extends Component {\n\n  // Setting this.state.friends to the friends json array\n  state = {\n    friendList,\n    selected: [],\n    score: 0,\n    topScore: 0,\n    status: ''\n  };\n\n  // When this component mounts, shuffle the FriendList Array\n  componentDidMount() {\n\n    this.setState({ friendList: this.shuffle(friendList) })\n  }\n\n  // Trigger when friend is selected\n  selectedFriend = id => {\n\n    // Add previously selected ids to the selected array and shuffle the friendsList\n    this.setState({\n      selected: this.state.selected.concat(id),\n      friendList: this.shuffle(friendList)\n    });\n\n    // Search to see if id has already been selected\n    const selected = this.state.selected.find(element => { return element === id });\n\n    // Check if an id was selected\n    if (!selected) {\n\n      // Increment Score\n      this.setState({ score: this.state.score + 1 });\n\n      // Increment Top Score if Score and TopScore are the same\n      this.setState({\n        topScore: this.state.score >= this.state.topScore ? this.state.topScore + 1 : this.state.topScore\n      });\n\n      // Display correct guess\n      this.setState({ status: 'You guessed correctly!' })\n\n      console.log(\"score\", this.state.score);\n\n      // Check to see if all guess were correct\n      if (this.state.score === 11) {\n\n        this.setState({ status: 'You win!' })\n      }\n    }\n    else {\n\n      // Reset Score and Selected Ids - Display incorrect guess\n      this.setState({\n        score: 0,\n        selected: [],\n        status: 'You guessed incorrectly! Try again...'\n      });\n\n      // Make game shake everytime some lose\n      var element = document.getElementById(\"shakerBox\");\n      element.classList.remove(\"shakeFriends\");\n      void element.offsetWidth;\n      element.classList.add(\"shakeFriends\");\n\n    }\n  };\n\n  // Shuffle the FriendList array\n  shuffle = sourceArray => {\n    for (var i = 0; i < sourceArray.length - 1; i++) {\n      var j = i + Math.floor(Math.random() * (sourceArray.length - i));\n\n      var temp = sourceArray[j];\n      sourceArray[j] = sourceArray[i];\n      sourceArray[i] = temp;\n    }\n    return sourceArray;\n  }\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Header status={this.state.status || \"Click an image to begin!\"} score={this.state.score} topScore={this.state.topScore} />\n        <Jumbotron />\n        <WrapperImages>\n          {this.state.friendList.map(friend => (\n            <FriendCard\n              selectedFriend={this.selectedFriend}\n              id={friend.id}\n              key={friend.id}\n              name={friend.name}\n              image={friend.image}\n            />\n          ))}\n        </WrapperImages>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}